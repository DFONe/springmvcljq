<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 启用Spring基于annotation的DI, 使用户可以在Spring MVC中使用Spring的强大功能。 激活 @Required
        @Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource 等标注 -->
    <context:annotation-config />

    <!-- DispatcherServlet上下文， 只管理@Controller类型的bean， 忽略其他型的bean, 如@Service -->
    <context:component-scan base-package="com.imooc">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <mvc:annotation-driven />
    
    <!-- 静态资源处理， css， js， imgs -->
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsps/" />
        <property name="suffix" value=".jsp" />
    </bean>
	
	<!-- 注册拦截器 interceptors专门用于注册拦截器-->
	<!--<mvc:interceptors>-->
		<!-- 配置拦截器的使用规则用到了一个新的标签mvcinterceptor -->
	<!--  	<mvc:interceptor>-->
			<!-- path是我们拦截的路径，以什么结尾的请求 ，路径不是只能这样写死，还可以使用正则符号*和？来配备这些路径-->
		<!-- 	<mvc:mapping path="/courses/view1**"/>-->
			<!-- 在这里注册编写的拦截器 -->
			<!-- 这是一个mvcinterceptors代表的是多个interceptors 里面一个bean标签把interceptor添加进来-->
	<!--		<bean class="com.imooc.test.interceptor.Test1Interceptor"></bean> 
		</mvc:interceptor>
	</mvc:interceptors>
	 -->
	 
	<!--  <mvc:interceptors>
	 	<bean class="com.imooc.test.interceptor.Test1Interceptor"></bean>
	 	<bean class="com.imooc.test.interceptor.Test2Interceptor"></bean>
	 </mvc:interceptors> -->
	 
	  <mvc:interceptors>
	 	<bean class="com.imooc.test.interceptor.Test1Interceptor"></bean>
	 </mvc:interceptors>
	 
	 
	 
</beans>

